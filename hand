#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

char* BuildCommandPath(const char* directory, const char* command)
{
    size_t dir_len = strlen(directory);
    size_t command_len = strlen(command);
    size_t path_len = dir_len + command_len + 2; // +2 for '/' and null terminator

    char* command_path = malloc(path_len);
    if (command_path == NULL)
    {
        perror("malloc");
        exit(EXIT_FAILURE);
    }

    strcpy(command_path, directory);
    strcat(command_path, "/");
    strcat(command_path, command);

    return command_path;
}

char* ModifyCommand(const char* command_path, const char* command, const char* arguments)
{
    char* modified_command_path = malloc(strlen(command_path) + strlen(command) + strlen(arguments) + 4);
    if (modified_command_path == NULL)
    {
        perror("malloc");
        exit(EXIT_FAILURE);
    }

    strcpy(modified_command_path, command_path);
    strcat(modified_command_path, " ");
    strcat(modified_command_path, command);
    strcat(modified_command_path, " | ");
    strcat(modified_command_path, arguments);

    return modified_command_path;
}

char* Handle_Path(char **args)
{
    const char* directory = "/bin/";
    const char* command = args[0];

    char* command_path = BuildCommandPath(directory, command);
    if (access(command_path, X_OK) == 0)
    {
        char *pipe_arg = strchr(args[0], '|');
        if (pipe_arg != NULL)
        {
            char *command = strtok(args[0], "|");
            char *arguments = strtok(NULL, "|");
            char *trimmed_arguments = arguments;
            while (*trimmed_arguments == ' ')
                trimmed_arguments++;
            size_t len = strlen(trimmed_arguments);
            while (len > 0 && trimmed_arguments[len - 1] == ' ')
                trimmed_arguments[--len] = '\0';

            char* modified_command_path = ModifyCommand(command_path, command, trimmed_arguments);
            free(command_path);
            args[0] = modified_command_path;
            return modified_command_path;
        }
        args[0] = command_path;
        return command_path;
    }
    free(command_path);
    return NULL;
}

